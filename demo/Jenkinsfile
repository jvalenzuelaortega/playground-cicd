pipeline {
  agent any
  // Enviroments
  environment {
    BASE_DIR = 'demo'
  }

  parameters {
    string(name: 'MVNCOMAND', defaultValue: 'mvn', description: 'MVN command for executions')
  }

  stages {
    stage('Build') {
      steps {
        dir(env.BASE_DIR) {
          bat '${params.MVNCOMAND} -B -DskipTests clean package'
          //sh '${params.MVNCOMAND} -B -DskipTests clean package'
        }
      }
      post {
        failure {
          echo 'This will run only if failed'
          bat 'dir'
          //sh 'ls'
        }
      }
    }
    stage('Test') {
      steps {
        dir(env.BASE_DIR) {
          bat '${params.MVNCOMAND} test'
          //'${params.MVNCOMAND} test'
        }
      }
    }
    stage('Checkstyle') {
        steps {
            dir(env.BASE_DIR) {
                bat '${params.MVNCOMAND} checkstyle:check'
                //sh '${params.MVNCOMAND} checkstyle:check'
            }
        }
    }
    stage('Coverage') {
      steps {
        dir(env.BASE_DIR) {
          bat '${params.MVNCOMAND} jacoco:report'
          //'${params.MVNCOMAND} jacoco:report'
        }
      }
    }

    stage('Report') {
      steps {
        dir(env.BASE_DIR) {
          // for html plugin
          publishHTML(target: [
            reportName: 'Report for demo app',
            reportDir: 'target/site/jacoco',
            reportFiles: 'index.html',
            keepAll: true,
            alwaysLinkToLastBuild: true,
            allowMissing: false
          ])
        }
      }
    }
    stage('Finish') {
      steps {
        dir(env.BASE_DIR) {
          echo 'Finish revision'
        }
      }
    }
  }

  post {
    always {
      // Archive build artifacts
      archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true

      // Archive test results
      junit '**/target/surefire-reports/*.xml'
    }

    success {
      echo 'Build and tests succeeded'
    }

    failure {
      echo 'Build or tests failed'
    }
  }
}